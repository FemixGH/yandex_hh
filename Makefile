# Makefile –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è AI Bartender –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏

.PHONY: help build up down logs restart clean dev prod

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
COMPOSE_FILE=docker-compose.yml
PROD_COMPOSE_FILE=docker-compose.prod.yml
PROJECT_NAME=ai-bartender

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

build: ## –°–æ–±—Ä–∞—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã
	docker-compose -f $(COMPOSE_FILE) build

build-prod: ## –°–æ–±—Ä–∞—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω –æ–±—Ä–∞–∑—ã
	docker-compose -f $(PROD_COMPOSE_FILE) build --no-cache

dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	docker-compose -f $(COMPOSE_FILE) up -d
	@echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"
	@echo "üåê API: http://localhost:8000"

prod: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º–µ
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º–µ..."
	docker-compose -f $(PROD_COMPOSE_FILE) up -d
	@echo "‚úÖ –ü—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"
	@echo "üåê API: http://localhost:8000"
	@echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: http://localhost:9090"

up: dev ## –ó–∞–ø—É—Å—Ç–∏—Ç—å (–∞–ª–∏–∞—Å –¥–ª—è dev)

down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	docker-compose -f $(COMPOSE_FILE) down
	docker-compose -f $(PROD_COMPOSE_FILE) down

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	docker-compose -f $(COMPOSE_FILE) logs -f

logs-backend: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ backend
	docker-compose -f $(COMPOSE_FILE) logs -f backend

logs-bot: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ telegram bot
	docker-compose -f $(COMPOSE_FILE) logs -f telegram_bot

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	docker-compose -f $(COMPOSE_FILE) ps

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	docker-compose -f $(COMPOSE_FILE) restart

restart-backend: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å backend
	docker-compose -f $(COMPOSE_FILE) restart backend

restart-bot: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å telegram bot
	docker-compose -f $(COMPOSE_FILE) restart telegram_bot

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	docker system prune -f
	docker volume prune -f

clean-all: ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–û–°–¢–û–†–û–ñ–ù–û!)
	docker-compose -f $(COMPOSE_FILE) down -v
	docker-compose -f $(PROD_COMPOSE_FILE) down -v
	docker system prune -af
	docker volume prune -f

health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
	@curl -f http://localhost:8000/health || echo "‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

shell-backend: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É
	docker-compose -f $(COMPOSE_FILE) exec backend bash

shell-bot: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ bot –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É
	docker-compose -f $(COMPOSE_FILE) exec telegram_bot bash

update: ## –û–±–Ω–æ–≤–∏—Ç—å –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å
	git pull
	docker-compose -f $(COMPOSE_FILE) pull
	docker-compose -f $(COMPOSE_FILE) up -d --build

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ–±–ª–∞—á–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
push-images: ## –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞–∑—ã –≤ —Ä–µ–µ—Å—Ç—Ä
	@echo "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –≤ —Ä–µ–µ—Å—Ç—Ä..."
	docker tag $(PROJECT_NAME)_backend:latest your-registry/$(PROJECT_NAME)-backend:latest
	docker tag $(PROJECT_NAME)_telegram_bot:latest your-registry/$(PROJECT_NAME)-bot:latest
	docker push your-registry/$(PROJECT_NAME)-backend:latest
	docker push your-registry/$(PROJECT_NAME)-bot:latest

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
monitor: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
	docker stats

backup: ## –°–æ–∑–¥–∞—Ç—å backup –¥–∞–Ω–Ω—ã—Ö
	@echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ backup..."
	docker run --rm -v ai-bartender_vectorstore_data:/data -v $(PWD):/backup alpine tar czf /backup/vectorstore-backup-$(shell date +%Y%m%d-%H%M%S).tar.gz -C /data .
	docker run --rm -v ai-bartender_faiss_data:/data -v $(PWD):/backup alpine tar czf /backup/faiss-backup-$(shell date +%Y%m%d-%H%M%S).tar.gz -C /data .
