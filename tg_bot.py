import os
import logging
import asyncio
from datetime import datetime
from dotenv import load_dotenv
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(
            f"ai_bartender_{datetime.now().strftime('%Y%m%d_%H%M%S')}.log",
            encoding='utf-8'
        ),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv()
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# –î–∏—Å–∫–ª–µ–π–º–µ—Ä –æ –≤—Ä–µ–¥–µ –∞–ª–∫–æ–≥–æ–ª—è
DISCLAIMER = """
‚ö†Ô∏è –í–ê–ñ–ù–û–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï ‚ö†Ô∏è

üö´ –ß—Ä–µ–∑–º–µ—Ä–Ω–æ–µ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—è –≤—Ä–µ–¥–∏—Ç –≤–∞—à–µ–º—É –∑–¥–æ—Ä–æ–≤—å—é
üö´ –ê–ª–∫–æ–≥–æ–ª—å –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω –ª–∏—Ü–∞–º –¥–æ 18 –ª–µ—Ç
üö´ –ë–µ—Ä–µ–º–µ–Ω–Ω—ã–º –∏ –∫–æ—Ä–º—è—â–∏–º –∂–µ–Ω—â–∏–Ω–∞–º
üö´ –õ–∏—Ü–∞–º —Å –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è–º–∏, –ø—Ä–∏ –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω –∞–ª–∫–æ–≥–æ–ª—å

‚ö° –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö –∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—è—Ö
‚ö° –ú—ã –Ω–µ –ø—Ä–∏–∑—ã–≤–∞–µ–º –∫ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—é –∞–ª–∫–æ–≥–æ–ª—è
‚ö° –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–ø–æ—Ç—Ä–µ–±–ª—è–π—Ç–µ –∞–ª–∫–æ–≥–æ–ª—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ

–ï—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã —Å —É—Å–ª–æ–≤–∏—è–º–∏, –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" üëá
"""

def get_ai_bartender_response(user_message: str) -> str:
    """
    –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ò–ò –±–∞—Ä–º–µ–Ω–∞. –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    """
    user_message_lower = user_message.lower()

    # –ü—Ä–æ—Å—Ç—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    if any(word in user_message_lower for word in ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–¥–æ–±—Ä–æ']):
        return "üç∏ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ–π –±–∞—Ä! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–æ–µ —É –≤–∞—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏–ª–∏ —á—Ç–æ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?"

    elif any(word in user_message_lower for word in ['–∫–æ–∫—Ç–µ–π–ª—å', '–Ω–∞–ø–∏—Ç–æ–∫', '–≤—ã–ø–∏—Ç—å']):
        return "üçπ –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:\n\n‚Ä¢ –ú–æ—Ö–∏—Ç–æ - –æ—Å–≤–µ–∂–∞—é—â–∏–π —Å –º—è—Ç–æ–π\n‚Ä¢ –ü–∏–Ω–∞ –ö–æ–ª–∞–¥–∞ - —Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏–π —Ä–∞–π\n‚Ä¢ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ - –∫–ª–∞—Å—Å–∏–∫–∞ —Å –ª–∞–π–º–æ–º\n\n–ö–∞–∫–æ–π —Å—Ç–∏–ª—å –≤–∞–º –±–ª–∏–∂–µ - –ª–µ–≥–∫–∏–π –∏ —Ñ—Ä—É–∫—Ç–æ–≤—ã–π –∏–ª–∏ –ø–æ–∫—Ä–µ–ø—á–µ?"

    elif any(word in user_message_lower for word in ['–±–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–π', '–±–µ–∑ –∞–ª–∫–æ–≥–æ–ª—è', '–±–µ–∑–∞–ª–∫–æ–≥–æ–ª—å']):
        return "ü•§ –ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä! –ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:\n\n‚Ä¢ –í–∏—Ä–≥–∏–Ω –ú–æ—Ö–∏—Ç–æ - –º—è—Ç–∞, –ª–∞–π–º, —Å–æ–¥–æ–≤–∞—è\n‚Ä¢ –ü–∏–Ω–∞ –ö–æ–ª–∞–¥–∞ –±–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω–∞—è\n‚Ä¢ –§—Ä—É–∫—Ç–æ–≤—ã–µ —Å–º—É–∑–∏\n‚Ä¢ –õ–∏–º–æ–Ω–∞–¥—ã –¥–æ–º–∞—à–Ω–µ–≥–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è\n\n–ß—Ç–æ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?"

    elif any(word in user_message_lower for word in ['–≥—Ä—É—Å—Ç–Ω–æ', '–ø–ª–æ—Ö–æ', '–¥–µ–ø—Ä–µ—Å—Å']):
        return "üòî –ü–æ–Ω–∏–º–∞—é –≤–∞—à–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ. –ù–æ –ø–æ–º–Ω–∏—Ç–µ - –∞–ª–∫–æ–≥–æ–ª—å –Ω–µ —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã.\n\n–õ—É—á—à–µ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:\nü´ñ –ì–æ—Ä—è—á–∏–π —á–∞–π —Å –º–µ–¥–æ–º\n‚òï –ê—Ä–æ–º–∞—Ç–Ω—ã–π –∫–æ—Ñ–µ\nü•õ –ú–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å\n\n–ò–Ω–æ–≥–¥–∞ —Ö–æ—Ä–æ—à–∞—è –±–µ—Å–µ–¥–∞ –ø–æ–º–æ–≥–∞–µ—Ç –±–æ–ª—å—à–µ –ª—é–±–æ–≥–æ –Ω–∞–ø–∏—Ç–∫–∞."

    elif any(word in user_message_lower for word in ['—Ä–µ—Ü–µ–ø—Ç', '–∫–∞–∫ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å']):
        return "üë®‚Äçüç≥ –° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–¥–µ–ª—é—Å—å —Ä–µ—Ü–µ–ø—Ç–æ–º!\n\n–ú–æ—Ö–∏—Ç–æ –±–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–π:\n‚Ä¢ 10 –ª–∏—Å—Ç–∏–∫–æ–≤ –º—è—Ç—ã\n‚Ä¢ 1/2 –ª–∞–π–º–∞\n‚Ä¢ 2 —á.–ª. —Å–∞—Ö–∞—Ä–∞\n‚Ä¢ –õ–µ–¥\n‚Ä¢ –°–æ–¥–æ–≤–∞—è –≤–æ–¥–∞\n\n–†–∞—Å—Ç–æ–ª–∫–∏—Ç–µ –º—è—Ç—É —Å —Å–∞—Ö–∞—Ä–æ–º, –¥–æ–±–∞–≤—å—Ç–µ —Å–æ–∫ –ª–∞–π–º–∞, –ª–µ–¥ –∏ –¥–æ–ª–µ–π—Ç–µ —Å–æ–¥–æ–≤–æ–π. –ì–æ—Ç–æ–≤–æ! üçÉ"

    else:
        return "ü§î –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –±–æ–ª—å—à–µ –æ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö. –Ø –ø–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ –¥–ª—è –≤–∞—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è!"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start —Å –ø–æ–∫–∞–∑–æ–º –¥–∏—Å–∫–ª–µ–π–º–µ—Ä–∞"""
    try:
        uid = update.effective_user.id

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_states[uid] = {
            "disclaimer_shown": True,
            "accepted_disclaimer": False
        }

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏—Å–∫–ª–µ–π–º–µ—Ä
        keyboard = [["‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", "‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è"]]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)

        await update.message.reply_text(
            f"üç∏ –ü—Ä–∏–≤–µ—Ç! –Ø –ò–ò –ë–∞—Ä–º–µ–Ω!\n\n{DISCLAIMER}",
            reply_markup=reply_markup
        )

        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {uid} –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ start: {e}")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        uid = update.effective_user.id
        text = update.message.text

        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {uid} –Ω–∞–ø–∏—Å–∞–ª: {repr(text)}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_state = user_states.get(uid, {})

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –ø—Ä–∏–Ω—è–ª –¥–∏—Å–∫–ª–µ–π–º–µ—Ä
        if not user_state.get("accepted_disclaimer", False):
            if text == "‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å":
                user_states[uid]["accepted_disclaimer"] = True

                keyboard = [["üçπ –ö–æ–∫—Ç–µ–π–ª–∏", "ü•§ –ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ"], ["üé≠ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", "üìñ –†–µ—Ü–µ–ø—Ç—ã"]]
                reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

                await update.message.reply_text(
                    "üéâ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —è –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±–∞—Ä–º–µ–Ω!\n\n"
                    "üí¨ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ, –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.\n"
                    "–Ø –ø–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ –¥–ª—è –≤–∞—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è! üç∏",
                    reply_markup=reply_markup
                )
                return

            elif text == "‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è":
                await update.message.reply_text(
                    "üòî –ñ–∞–ª—å, —á—Ç–æ –≤—ã –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.\n"
                    "–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start"
                )
                return
            else:
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ –¥–æ –ø—Ä–∏–Ω—è—Ç–∏—è –¥–∏—Å–∫–ª–µ–π–º–µ—Ä–∞
                keyboard = [["‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", "‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è"]]
                reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)

                await update.message.reply_text(
                    "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–º–∏—Ç–µ –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–∏—Ç–µ —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞.",
                    reply_markup=reply_markup
                )
                return

        # –ï—Å–ª–∏ –¥–∏—Å–∫–ª–µ–π–º–µ—Ä –ø—Ä–∏–Ω—è—Ç, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
        keyboard = [["üçπ –ö–æ–∫—Ç–µ–π–ª–∏", "ü•§ –ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ"], ["üé≠ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", "üìñ –†–µ—Ü–µ–ø—Ç—ã"]]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
        if text == "üçπ –ö–æ–∫—Ç–µ–π–ª–∏":
            response = "üç∏ –ö–æ–∫—Ç–µ–π–ª–∏ - —ç—Ç–æ –∏—Å–∫—É—Å—Å—Ç–≤–æ! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–æ–π –≤–∫—É—Å –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ: —Å–ª–∞–¥–∫–∏–π, –∫–∏—Å–ª—ã–π, –≥–æ—Ä—å–∫–∏–π? –ò–ª–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å, —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ?"
        elif text == "ü•§ –ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ":
            response = get_ai_bartender_response("–±–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–π")
        elif text == "üé≠ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ":
            response = "üòä –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ - —ç—Ç–æ –∫–ª—é—á –∫ –∏–¥–µ–∞–ª—å–Ω–æ–º—É –Ω–∞–ø–∏—Ç–∫—É! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—Ç–µ: –≤–µ—Å–µ–ª–æ, —Ä–æ–º–∞–Ω—Ç–∏—á–Ω–æ, —É—Å—Ç–∞–ª–∏, —Ö–æ—Ç–∏—Ç–µ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è?"
        elif text == "üìñ –†–µ—Ü–µ–ø—Ç—ã":
            response = get_ai_bartender_response("—Ä–µ—Ü–µ–ø—Ç")
        else:
            # –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –ò–ò
            response = get_ai_bartender_response(text)

        await update.message.reply_text(response, reply_markup=reply_markup)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await update.message.reply_text(
            "üòÖ –ò–∑–≤–∏–Ω–∏—Ç–µ, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!"
        )

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    try:
        if not TELEGRAM_TOKEN:
            logger.error("TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
            return

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        application = Application.builder().token(TELEGRAM_TOKEN).build()

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        application.add_handler(CommandHandler("start", start))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

        logger.info("üç∏ –ò–ò –ë–∞—Ä–º–µ–Ω –∑–∞–ø—É—â–µ–Ω!")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        application.run_polling()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")

if __name__ == "__main__":
    main()
