version: '3.8'

services:
  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: ai_bartender_backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - API_HOST=0.0.0.0
      - API_PORT=8000
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./vectorstore:/app/vectorstore
      - ./faiss_index_yandex:/app/faiss_index_yandex
    networks:
      - bartender_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Telegram Bot
  telegram_bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: ai_bartender_bot
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - PYTHONPATH=/app
      - API_BASE_URL=http://backend:8000
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    networks:
      - bartender_network
    restart: unless-stopped

  # Redis для кеширования (опционально)
  redis:
    image: redis:7-alpine
    container_name: ai_bartender_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bartender_network
    restart: unless-stopped
    command: redis-server --appendonly yes

networks:
  bartender_network:
    driver: bridge

volumes:
  redis_data:
